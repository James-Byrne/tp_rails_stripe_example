require "stripe"

module StripeHandlerModule
  extend ActiveSupport::Concern

  # Set the stripe API key when we include the module
  included do
    Stripe.api_key = "9e448aed5e200e4d277327088a362f60" # tp api key
  end

  # Create a charge
  def create_charge(amount, token)
    result = stripe_handler do
      Stripe::Charge.create(
        :amount => (amount.to_f * 100).to_i,
        :currency => "usd",
        :source => token,
        :description => "Charge for testing.pays@example.com"
      )
    end

    return result
  end

  # Function for logging the response of a stripe request
  def stripe_handler
    begin
      result = yield
    rescue Stripe::CardError,       # Most common error, occurs when card cannot be charged
      Stripe::RateLimitError,       # Too many requests hit the API too quickly
      Stripe::InvalidRequestError,  # The request has invalid params
      Stripe::AuthenticationError,  # Failed to authenticate with stripes api
      Stripe::APIConnectionError,   # Failed to connect to stripes api
      Stripe::StripeError => e      # Generic stripe error

      if e.json_body
        error = {error: e.json_body[:error], status: e.http_status}
      else
        error = {error: e.message}
      end

    rescue => e
      # Something else happened, completely unrelated to Stripe
      Rails.logger.info "500 error"
      Rails.logger.info e.message
      Rails.logger.info e.backtrace

      error = {error: "err_not_stripe"} # The error was not generated by stripe
    end

    # Return the result or error from the request
    return result || error
  end
end
